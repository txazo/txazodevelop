HTTP协议

1. Http Request GET
GET /spring/login.html?user=root&password=root HTTP/1.1
Host: 127.0.0.1
Connection: keep-alive
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
User-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36
Accept-Encoding: gzip,deflate,sdch
Accept-Language: zh-CN,zh;q=0.8,en;q=0.6,it;q=0.4

2. Http Request POST
POST /spring/login.html HTTP/1.1
Host: 127.0.0.1
Connection: keep-alive
Content-Length: 23
Cache-Control: max-age=0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Origin: null
User-Agent: Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.63 Safari/537.36
Content-Type: application/x-www-form-urlencoded
Accept-Encoding: gzip,deflate,sdch
Accept-Language: zh-CN,zh;q=0.8,en;q=0.6,it;q=0.4
Cookie: JSESSIONID=81B73337846A503BE272B474B6E9D318

user=root&password=root

3. Http Response
HTTP/1.1 200 OK
Server: Apache-Coyote/1.1
Content-Type: text/html;charset=utf-8
Content-Language: zh-CN
Content-Length: 155
Date: Fri, 04 Jul 2014 16:58:47 GMT

<!DOCTYPE HTML>
<html lang="zh">
<head>
<meta charset="utf-8" />
<title>Login</title>
</head>
<body>
	<h3>Login</h3>
</body>
</html>

4. GET和POST的区别
1) GET通过URL提交数据，POST则将数据封装在请求体中
2) GET方式提交的数据最多1024字节，POST方式无限制

5. Http请求响应全过程
1)连接
    Web服务器启动，在端口80处创建好ServerSocket，监听并等待端口80处的Socket连接请求
    用户在Web浏览器地址栏输入URL回车或点击网页上的超链接或点击提交网页上的表单
    Web浏览器通过解析URL获得相应的Web服务器的IP地址和端口号
    Web浏览器通过Web服务器的IP地址和端口号创建Socket，请求连接到Web服务器的ServerSocket
    Web服务器的ServerSocket接受连接，Socket连接成功，Web服务器获得相应的服务器Socket
    Web浏览器和Web服务器分别通过各自的Socket获得输入流和输出流
2)请求
    Web浏览器解析URL，封装HTTP请求，然后通过Web浏览器的Socket输出流发送HTTP请求
3)响应
    Web服务器的Socket输入流接受到HTTP请求
    Web服务器解析HTTP请求
    Web服务器查找或生成HTML文档
    Web服务器将HTML文档封装到HTTP响应，通过Web服务器的Socket输出流发送HTTP响应
    Web浏览器的Socket输入流接受到HTTP响应
    Web浏览器解析HTTP响应，获取HTML文档并解析显示
4)关闭
    Web服务器发送完HTTP响应后，断开Socket连接

6. Http状态码
   200	请求成功
   304	请求资源未修改
   400	请求语法错误
   401	请求要求身份认证
   404	请求无法找到资源
   405	请求方法被禁止
   500	服务器内部错误，无法完成请求
   503	服务期超载或维护，暂时无法处理请求